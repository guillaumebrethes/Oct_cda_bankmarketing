import streamlit as st  # type: ignore
import pandas as pd
import numpy as np
import joblib # type: ignore
import matplotlib.pyplot as plt
from streamlit_shap import st_shap # type: ignore
import shap # type: ignore
import plotly.graph_objects as go # type: ignore

# Page
st.set_page_config(
    page_title="Bank Marketing",
    page_icon="‚öôÔ∏è", 
    #layout="wide" 
)

st.title("Mod√©lisation")

if st.button("‚óÄÔ∏è\u2003üìä Visualiation - Statistique"):
    st.switch_page("pages/3_üìä_Visualiation_-_Statistique.py")
st.write("---")

st.markdown(
    """ 
    Introduction √† ecrire 
    """
    )

# --------------------------------------------------------------------------------------------
# Importation des jeux d'entrainement et de test sauvegard√©s  depuis google collab
X_test = pd.read_csv("Split_csv/3_bank_X_test.csv",index_col=0)
y_test = pd.read_csv("Split_csv/3_bank_y_test.csv",index_col=0)
X_test_copie = pd.read_csv("Split_csv/3_bank_X_test_copie.csv",index_col=0)

#Importation des valeurs Shap (que la classe 1 pour rfc)
shap_values_gbc = np.load('Shap/shap_values_gbc.npy')
shap_values_rfc = np.load('Shap/shap_values_rfc.npy')

st.write(shap_values_rfc.shape)

# importations des mod√®les optimis√©s √† interpr√©ter
gbc_after = joblib.load("Models/model_gbc_after")
rfc_after = joblib.load("Models/model_rfc_after")
# --------------------------------------------------------------------------------------------

st.write("---")
st.write("### Interpr√©tation des Mod√®les avec la m√©thode SHAP ###")
# st.markdown('<h1 style="font-size: 30px;">Interpr√©tation des Mod√®les avec la m√©thode SHAP</h1>', unsafe_allow_html=True)

#---------------------------------------
#Cr√©ation d'un expander pour expliquer la m√©thode Shap

with st.expander("Cliquez ici pour en savoir plus sur la m√©thode SHAP"):
    st.markdown("""
    <div>
        La m√©thode SHAP (SHapley Additive exPlanations) repose sur les valeurs de Shapley, une m√©thode issue de la th√©orie des jeux coop√©ratifs, pour attribuer √† chaque caract√©ristique (ou variable) une importance en fonction de sa contribution √† la pr√©diction.
        <br><br>
        SHAP est une m√©thode qui explique comment les pr√©dictions individuelles sont effectu√©es par un mod√®le d'apprentissage automatique. Elle d√©construit une pr√©diction en une somme de contributions (valeurs SHAP) de chacune des variables d'entr√©e du mod√®le.
        <br><br>
        √Ä noter que SHAP indique ce que fait le mod√®le dans le contexte des donn√©es sur lesquelles il a √©t√© form√©. Il ne r√©v√®le pas n√©cessairement la v√©ritable relation entre les variables et les r√©sultats dans le monde r√©el.
    </div>
    """, unsafe_allow_html=True)
st.write("---")

#----------------------------------------------------------------------------------------------------------------------
#On propose de voir la page en fonction du mod√®le s√©l√©ctionn√© gbc_after ou rfc_after

# S√©lection du mod√®le via liste d√©roulante
model_choice = st.selectbox(
    label='**S√©lectionner un mod√®le pour afficher les 10 plus importantes variables**',
    options=['Gradiant Boosting Classifier', 'Random Forest Classifier'], 
    index = None, 
    placeholder= "Mod√®le . . .", 
    help= "Le chargement peut prendre entre 20 et 30 secondes")

# Chargement des valeurs SHAP et explainer en fonction du mod√®le s√©lectionn√©
model = gbc_after if model_choice == 'Gradiant Boosting Classifier' else rfc_after

shap_values = shap_values_gbc if model_choice == 'Gradiant Boosting Classifier' else shap_values_rfc

expected_value = shap.TreeExplainer(gbc_after).expected_value

if model_choice == 'Gradiant Boosting Classifier':
    explainer = shap.TreeExplainer(gbc_after)
    expected_value = explainer.expected_value
else:
    explainer = shap.TreeExplainer(rfc_after)
    expected_value = explainer.expected_value[1]

shap_values = explainer.shap_values(X_test)
plt.figure() 

shap.summary_plot(shap_values, 
                  X_test, 
                  plot_type="bar", 
                  max_display=10, 
                  show=False)

st.pyplot(plt.gcf(), use_container_width=True)
st.markdown(
    """
    L'axe des X repr√©sente la moyenne des valeurs SHAP absolues pour chaque variable, indiquant l'importance moyenne de chaque variable sur la pr√©diction du mod√®le. **duration est la variable qui influence le plus la pr√©diction du mod√®le (moyenne de 1.2)**
    """
    )

st.write("---")

#--------------------------------------------------------------------------------------------------------------

# Utilisation d'un extender pour montrer le Graphique d'importance des variables     
with st.expander("üîç **Impact des variables dans la d√©cision du mod√®le**"):
    plt.figure() 
    shap.summary_plot(shap_values, 
                      X_test, 
                      max_display=10, show=False)
    
    st.pyplot(plt.gcf(), use_container_width=True)
    st.markdown("""
Dans ce graphique, l'axe des x repr√©sente la valeur SHAP et l'axe des y repr√©sente les variables explicatives (ici le TOP 10). 

Chaque point du graphique correspond √† une valeur SHAP pour une pr√©diction et une variable explicative. La couleur rouge signifie une valeur plus √©lev√©e de la variable explicative. Le bleu signifie une valeur faible de cette derni√®re. Nous pouvons avoir une id√©e g√©n√©rale de la directionnalit√© de l'impact des variables en fonction de la distribution des points rouges et bleus.

On peut lire que plus la valeur de **duration** est grande (le temps de l'appel long), plus l'impact sur la pr√©diction de souscription du d√©p√¥t √† terme est positif  et inversement plus **duration** est faible, plus l'impact sur la pr√©diction est n√©gatif. Une valeur importante de **poutcome_success** (client avait souscrit √† un d√©p√¥t √† terme auparavant) a un impact positif sur la souscription du d√©p√¥t √† terme. 

Une valeur plus grande de **housing** (le client a un pr√™t immobilier) a un impact n√©gatif sur la pr√©diction de la souscription du d√©p√¥t et inversement une valeur faible ( le client n‚Äôa pas de pr√™t immobilier) a un effet positif sur la pr√©diction de la souscription du d√©p√¥t.
""")
